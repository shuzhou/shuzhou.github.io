<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>张书洲的博客</title>
    <link></link>
    <description>My personal blog</description>
    
      <item>
        <title>windows下搭建jekyll调试博客</title>
        <link>/2015/07/08/windows%20install%20jekyll%20environment%20.html</link>
        <guid isPermaLink="true">/2015/07/08/windows%20install%20jekyll%20environment%20.html</guid>
        <pubDate>Wed, 08 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;首先对安装的整理流程做个简单叙述：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装Ruby及Devkit&lt;/li&gt;
&lt;li&gt;使用gem安装Jekyll&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 Pygments&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装 Python&lt;/li&gt;
&lt;li&gt;安装 ‘Easy Install’&lt;/li&gt;
&lt;li&gt;用 “easy_install” 来安装 Pygments&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动Jekyll&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;故障诊断&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;1. 安装Ruby及Devkit&lt;/strong&gt;&lt;/h3&gt;

&lt;h4&gt;&lt;strong&gt;1). 安装Ruby&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前往 &lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 “RubyInstallers” 部分，选择某个版本点击下载。（笔者安装版本&lt;a href=&quot;http://pan.baidu.com/s/1hqpNBi0&quot;&gt;下载&lt;/a&gt;）
例如， Ruby 2.0.0-p451 (x64) 是适于64位 Windows 机器上的 Ruby 2.0.0 x64 安装包。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过安装包安装&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最好保持默认的路径 C:\Ruby200-x64， 因为安装包明确提出 “请不要使用带有空格的文件夹 (如： Program Files)”。&lt;/li&gt;
&lt;li&gt;勾选 “Add Ruby executables to your PATH”，这样执行程序会被自动添加至 PATH 而避免不必要的头疼（建议将所有可勾选的项全部进行勾选）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证ruby是否安装成功：打开控制台输入&lt;code&gt;ruby -v&lt;/code&gt;，例如输出&lt;code&gt;ruby 2.1.5p273 (2014-11-13 revision 48405) [x64-mingw32]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;2). 安装Devkit&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;DevKit是windows平台下编译和使用本地C/C++扩展包的工具。它就是用来模拟Linux平台下的make,gcc,sh来进行编译。但是这个方法目前仅支持通过RubyInstaller安装的Ruby。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;再次前往 &lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载同系统及 Ruby 版本相对应的 DevKit 安装包。 例如，DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe 适用于64位 Windows 系统上的 Ruby 2.0.0 x64。(笔者安装的ruby对应的Devkit版本&lt;a href=&quot;http://pan.baidu.com/s/1dDcw84T&quot;&gt;下载&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;运行安装包并解压缩至某文件夹，如 C:\DevKit&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开控制台，进入解压文件夹目录，输入如下命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ruby dk.rb init
ruby dk.rb install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;安装Devkit出现问题汇总：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_7444213001018fa7.html&quot;&gt;http://blog.sina.com.cn/s/blog_7444213001018fa7.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;2.使用gem安装Jekyll&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;一般情况下经过第1步骤的安装gem已经安装，我们可以通过输入&lt;code&gt;gem -v&lt;/code&gt;进行检查gem是否安装（Gem是一个管理Ruby库和程序的标准包）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gem是可以选择源的，默认的源有点慢，可以使用ruby.taobao.org的源&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看当源&lt;/p&gt;

&lt;p&gt;输入：   &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gem sources list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;显示：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;***CURRENT SOURCES ***
https://rubygems.org/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加新源&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gem sources -a http://ruby.taobao.org/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除默认源&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gem sources --remove https://rubygems.org/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;再次查看新源,确保只有&lt;code&gt;http://ruby.taobao.org/&lt;/code&gt;就行了&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;直接如下命令即可安装jekyll，该命令会安装jekyll及所有需要的依赖（但不包括插件）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;网上有人说jekyll的版本1.4.3有个bug,但是我直接安装了最新版本，为2.5.3，没有碰到所谓的bug，估计是新版本已经修复，所以自动略过&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;strong&gt;3.安装 Pygments&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;Jekyll 里默认的语法高亮插件是 Pygments。 它需要安装 Python。&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;不久之前，Jekyll 还添加另一个高亮引擎名为 Rouge， 尽管暂时不如 Pygments 支持那么多的语言，但它是原生 Ruby 程序，而不需要使用 Python。&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;1). 安装 Python&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;建议安装python 2(具体安装略去)&lt;/li&gt;
&lt;li&gt;配置python环境变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python –V&lt;/code&gt;检查python是否安装成功&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;2). 安装 ‘Easy Install’&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;浏览 &lt;a href=&quot;https://pypi.python.org/pypi/setuptools#installation-instructions&quot;&gt;https://pypi.python.org/pypi/setuptools#installation-instructions&lt;/a&gt; 来查看详细的安装指南。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于 Windows 7 的机器，下载 &lt;a href=&quot;http://pan.baidu.com/s/1qWl38Gc&quot;&gt;ez_setup.py&lt;/a&gt; 并保存，例如，至C:\。 然后从命令行使用 Python 运行此文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;python “C:\ez_setup.py”
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加 ‘Python Scripts’ 路径 (如： C:\Python27\Scripts) 至 PATH&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;3). 用 “easy_install” 来安装 Pygments&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;确保 easy_install 已经正确安装，输入&lt;code&gt;easy_install --version&lt;/code&gt;检查&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 “easy_install” 来安装 Pygments&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;easy_install Pygments
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;4.启动Jekyll&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;进入待启动的网站目录，然后输入&lt;code&gt;jekyll serve&lt;/code&gt;，然后既可以通过127.0.0.1:4000进行访问&lt;/p&gt;

&lt;h3&gt;参考博客&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/kong5090041/article/details/38408211&quot;&gt;Windows 上安装 Jekyll &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://segmentfault.com/a/1190000000406011&quot;&gt;使用Jekyll在Github上搭建个人博客&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      </item>
    
      <item>
        <title>git使用笔记</title>
        <link>/2015/07/07/git%20use%20note.html</link>
        <guid isPermaLink="true">/2015/07/07/git%20use%20note.html</guid>
        <pubDate>Tue, 07 Jul 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;git作为一个分布式的版本控制工具，其具有集中式版本管理工具所不具有的优点。关于其具体优点不做过多的赘述，下面就git的简单使用进行简单记录&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;预备工作&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;1.注册github账号&lt;/p&gt;

&lt;p&gt;2.window上安装git&lt;/p&gt;

&lt;p&gt;3.配置机器账号&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git config --global user.name &amp;quot;Your Name&amp;quot;
$ git config --global user.email &amp;quot;email@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.创建SSH Key&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;为什么GitHub需要SSH Key呢？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;strong&gt;1. 从远程仓库克隆&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;假设你需要将某个远程仓库的代码clone下来，那么你就需要用该模块的知识。
例如输入如下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git clone git@github.com:shuzhou/shuzhou.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>文件上传的路径获取及回环问题</title>
        <link>/2015/04/30/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%9A%84%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E5%8F%8A%E5%9B%9E%E7%8E%AF%E9%97%AE%E9%A2%98.html</link>
        <guid isPermaLink="true">/2015/04/30/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%9A%84%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E5%8F%8A%E5%9B%9E%E7%8E%AF%E9%97%AE%E9%A2%98.html</guid>
        <pubDate>Thu, 30 Apr 2015 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;1. ServletContext的getRealPath方法&lt;/h3&gt;

&lt;p&gt;request.getRealPath()这个方法以及被淘汰，所以建议不要使用。&lt;/p&gt;

&lt;p&gt;而获取ServletContext可以用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;request.getServletContext()（这种支持在servlet3.0以后的）&lt;/li&gt;
&lt;li&gt;request.getSession().getServletContext()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;String uploadPath = request.getSession().getServletContext().getRealPath(&amp;quot;/&amp;quot;);  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：该种方法中的&amp;quot;/&amp;quot;不能用File.separator代替，因为该种方法获取路径值为空&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;2. 采用getResource(&amp;quot;&amp;quot;)获取&lt;/h3&gt;

&lt;p&gt;在web附件上传的时候使用该方法需要配合&lt;code&gt;substring()&lt;/code&gt;函数使用，因为在web中使用该方法的获取的路径值形如&lt;code&gt;file:/C:/Java/apache-tomcat-8.0.12/webapps/bjl-gyw/WEB-INF/lib/commons-fileupload-1.3.jar!/org/apache/commons/fileupload/&lt;/code&gt;，直接使用该路径会产生错误。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;String path = RequestContext.class.getResource(&amp;quot;&amp;quot;).getPath(); 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;主要针对非servlet中，在一般的Java类中使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;3. 文件上传回环问题&lt;/h3&gt;

&lt;p&gt;在上传文件中，为了防止文件名冲突，一般选择对上传的文件进行重命名，自己重命名的规则一直习惯于ip+time+固定位随机数+原文件名，当我们服务器和客户端在同一台机器时，获取ip地址就产生了回环问题。&lt;/p&gt;

&lt;p&gt;当我们用到&lt;code&gt;httpServletRequest.getRemoteAddr()&lt;/code&gt;的时候，我们在控制台上可以看到遇到了&lt;code&gt;request.getRemoteAddr()&lt;/code&gt;获取的值为0:0:0:0:0:0:0:1，而不是127.0.0.1，这是什么原因呢？
因为0:0:0:0:0:0:0:1是ipv6的格式，其等同于ipv4格式的127.0.0.1。&lt;/p&gt;

&lt;p&gt;解决办法如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最简单的是你本机访问的时候不用localhost而是用127.0.0.1，这样我们可以看到正常的输出结果&lt;/li&gt;
&lt;li&gt;修改本机的配置文件C:\Windows\System32\drivers\etc下面有一个localhost的文件，你打开后可以看到# ::1 localhost的配置，你可以删除。其中你也可以修改本机的ip，例如你修改一下127.0.0.1为127.0.0.2，当你以后访问的时间127.0.0.2就是你的本机的ip了.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr/&gt;

&lt;p&gt;参考链接：&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://blog.csdn.net/liunian02050328/article/details/8088761&quot;&gt; request.getRemoteAddr()获取的值的问题？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;http://blog.csdn.net/fengshizty/article/details/28257927?utm_source=tuicool&quot;&gt;JavaEE 保存文件获取绝对路径getResource(&amp;quot;&amp;quot;)和servletContext.getRealPath(&amp;quot;/&amp;quot;) &lt;/a&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>vim中插件vundle配置</title>
        <link>/2015/04/25/vim%E4%B8%AD%E6%8F%92%E4%BB%B6bundle%E9%85%8D%E7%BD%AE.html</link>
        <guid isPermaLink="true">/2015/04/25/vim%E4%B8%AD%E6%8F%92%E4%BB%B6bundle%E9%85%8D%E7%BD%AE.html</guid>
        <pubDate>Sat, 25 Apr 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;有过vim配置的同学知道，vim配置后可以和IDE媲美，简直是当之无愧的神奇。&lt;/p&gt;

&lt;p&gt;现在我就为大家来介绍一款vim的管理插件 --vundle&lt;/p&gt;

&lt;h3&gt;1. vundle简介&lt;/h3&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;Vundle项目托管在github上 &lt;a href=&quot;https://github.com/gmarik/vundle&quot;&gt;https://github.com/gmarik/vundle&lt;/a&gt;，其特色在于使用git来管理插件,更新方便，支持搜索，一键更新，从此只需要一个vimrc走天下.&lt;/p&gt;

&lt;h3&gt;2. vundle配置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;下载vundle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;vundle的源码放在github上，所以先将vundle下载到本地&lt;/p&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;&lt;code&gt;git clone https://github.com/gmarik/vundle.git  ~/.vim/bundle/vundle&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;配置vim&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;#160; &amp;#160; &amp;#160; &amp;#160;使用命令&lt;code&gt;cd ~&lt;/code&gt;转换到当前用户的根目录下，然后修改.vimrc如所示&lt;a href=&quot;https://github.com/shuzhou/config_file/blob/master/vimrc&quot;&gt;https://github.com/shuzhou/config_file/blob/master/vimrc&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;当前用户下根目录输入&lt;code&gt;vim&lt;/code&gt;,然后输入&lt;code&gt;:BundleInstall&lt;/code&gt;,等待插件安装，安装完毕后就可以使用了&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;机器上没有安装git命令的童鞋请主动安装git命令&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>ubuntu中文编码配置</title>
        <link>/2015/04/06/ubuntu%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E9%85%8D%E7%BD%AE.html</link>
        <guid isPermaLink="true">/2015/04/06/ubuntu%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E9%85%8D%E7%BD%AE.html</guid>
        <pubDate>Mon, 06 Apr 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;linux服务器对中文的支持是一个一直让大家DT的问题，从系统语言配置、中文文件名支持到数据库乱码等偶会经常遇到。所以今天把编码中遇到的问题做一个简单的汇总。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;1. 系统环境语言&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;需要修改文件/etc/default/locale，输入命令如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo vim /etc/default/locale
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;中文设置如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;LANG=&amp;quot;zh_CN.UTF-8&amp;quot;
LANGUAGE=&amp;quot;zh_CN:zh&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;英文设置如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;LANG=&amp;quot;en_US.UTF-8&amp;quot;
LANGUAGE=&amp;quot;en_US:en&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;重启服务器生效&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;strong&gt;2. 终端中文显示乱码&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;需要修改的文件有两处：一个是/etc/environment，另一个是/var/lib/locales/supported.d/local&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;打开/etc/environment,在末尾添加如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;LANG=&amp;quot;zh_CN.UTF-8&amp;quot;
LANGUAGE=&amp;quot;zh_CN:zh:en_US:en&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt; 打开/var/lib/locales/supported.d/local修改为如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;en_US.UTF-8 UTF-8
zh_CN.UTF-8 UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; 需要输入&lt;code&gt;source /etc/environment&lt;/code&gt; 使得第一个文件配置生效  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; 输入&lt;code&gt;locale-gen&lt;/code&gt; 使得第二个配置生效&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; 原来存在乱码的文件依旧会乱码，重新上传或者新建的中文文件显示正常，无乱码问题&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;经过该步骤的修改，在系统输入locale显示如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_CTYPE=&amp;quot;en_US.UTF-8&amp;quot;
LC_NUMERIC=&amp;quot;en_US.UTF-8&amp;quot;
LC_TIME=&amp;quot;en_US.UTF-8&amp;quot;
LC_COLLATE=&amp;quot;en_US.UTF-8&amp;quot;
LC_MONETARY=&amp;quot;en_US.UTF-8&amp;quot;
LC_MESSAGES=&amp;quot;en_US.UTF-8&amp;quot;
LC_PAPER=&amp;quot;en_US.UTF-8&amp;quot;
LC_NAME=&amp;quot;en_US.UTF-8&amp;quot;
LC_ADDRESS=&amp;quot;en_US.UTF-8&amp;quot;
LC_TELEPHONE=&amp;quot;en_US.UTF-8&amp;quot;
LC_MEASUREMENT=&amp;quot;en_US.UTF-8&amp;quot;
LC_IDENTIFICATION=&amp;quot;en_US.UTF-8&amp;quot;
LC_ALL=
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;不清楚为啥是en_US还能正常显示中文&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;strong&gt;3. 数据库乱码：&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;其中数据库乱码需要设置四个地方

&lt;ul&gt;
&lt;li&gt; 确保所在系统能够支持中文编码显示，即经过了第二步配置&lt;/li&gt;
&lt;li&gt; 确保Mysql的编码是UTF-8【意思是MYSQL软件编码为UTF-8】&lt;/li&gt;
&lt;li&gt;确保所使用的数据库的编码是UTF-8【即database的编码是UTF-8】&lt;/li&gt;
&lt;li&gt;确保该数据库中每张表的编码是UTF-8【即table的编码是UTF-8】&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; 以上环境配置已经在本机测试成功&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; 关于环境配置的具体原理，至今没有了解清楚，希望懂得人给予讲解或者贴出相关链接，谢谢&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      </item>
    
      <item>
        <title>Python和Java语言对比</title>
        <link>/2015/04/05/Python%E5%92%8CJava%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94.html</link>
        <guid isPermaLink="true">/2015/04/05/Python%E5%92%8CJava%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94.html</guid>
        <pubDate>Sun, 05 Apr 2015 00:00:00 +0800</pubDate>
        <description>&lt;p&gt;&amp;#8194;&amp;#8194;&amp;#8194;&amp;#8194;现在一直习惯于用SSH做WEB开发，但是最近愈来愈感觉对于小的项目工程，Java的SSH框架过于沉重，所以经过调研发现Python语言比较方便，所以最近把python语法看了一遍，故把Python和Java中异同做下对比。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;1. 缩进&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;python需要用缩进来识别语句之前的逻辑块，需要在行尾加上‘：’表示接下来缩进格式相同的语句是一个语句块【python语句末尾可以不加&amp;#39;;&amp;#39;,但是必须&lt;strong&gt;采用缩进&lt;/strong&gt;】&lt;/li&gt;
&lt;li&gt;Java主要用‘{}’和‘；’来识别，不强制要求缩进（同样建议使用缩进格式）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;2. 数&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;python只有四种数据：整数，长整数、浮点数和&lt;strong&gt;复数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;java则有char，short,byte，int，long，float,double类型&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;3. 字符串&lt;/strong&gt;&lt;/h3&gt;

&lt;h4&gt;&lt;strong&gt;3.1. 字符串表示&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt; Python中没有表示单个常量字符串类型的char类型，其可以用单引号‘’、双引号“”来表示一个字符串，也可以用三引号来表示一个多行字符串 &lt;/li&gt;
&lt;li&gt; Java中char表示单个字符，String表示一个字符串，常量字符字符串用双引号“”表示&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;3.2. 多行字符串&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Python在字符串末尾加上反斜杠（/）表示字符串在下一行继续&lt;/li&gt;
&lt;li&gt;Java用加号（+）表示字符串在下一行继续&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;3.3. Python中其它的表示方法&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt; python中还有可以在字符串前加前缀r或R：表示自然字符串，即不对字符串做转移处理(比java方便&lt;/li&gt;
&lt;li&gt; Python可以加前缀u或U：表示unicode字符串&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;4. 操作符&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Python中&lt;strong&gt;表示幂计算，如果 X&lt;/strong&gt;y表示 $X^y$&lt;/li&gt;
&lt;li&gt;Python中//表示整除，即商的整数部分&lt;/li&gt;
&lt;li&gt;Python中~表示按位翻转，~x就是-(x+1)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;5. 接口与继承&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Python中继承示例如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
           &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fruit&amp;#39;s color: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;grow...&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class Apple(Fruit):                               #继承了父类
      def __init__(self, color):                  
           Fruit.__init__(self, color)            #显示调用父类的__init__方法（Python不会自动调用基本类的__init__()）
           print &amp;quot;apple&amp;#39;s color: %s&amp;quot; % self.color
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class Banana(Fruit):                              #继承了父类
      def __init__(self, color):                  
           Fruit.__init__(self, color)            #显示调用父类的__init__方法
           print &amp;quot;banana&amp;#39;s color:%s&amp;quot; %s self.color

      def grow(self):                             #覆盖了父类的grow方法
           print &amp;quot;banana grow...&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; Python 中的__init__（）方法类似与Java中的构造函数，Java构造函数中的self默认存在，不需要在构造函数声明的时候进行显示指明，但是Python需要在__init__()函数中显示指明（但是ID调用时不用显示进行self传递）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Python中的接口
Java中的接口接口是为了解决不能多继承的问题，由于Python中支持多继承，所以Python中没有接口的概念。
由于接口是特殊的抽象类，接口没有数据成员，而是一组未实现的方法的集合。要想实现接口的功能，完全可以用一个空的类来做。
例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    class Fruit():  
        def add(self):  
             pass  
        def remove(self):  
             pass  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;6. 对象的序列化表示&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Python中可以使用str（）或repr（）函数来实现对象的序列化&lt;/li&gt;
&lt;li&gt;Java中通过toString()方法来实现对象的序列化&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;7. 参数传递中的*和*&lt;/strong&gt;*&lt;/h3&gt;
</description>
      </item>
    
      <item>
        <title>ubuntu下MySQL开启远程连接</title>
        <link>/2014/12/12/ubuntu%E4%B8%8BMySQL%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5.html</link>
        <guid isPermaLink="true">/2014/12/12/ubuntu%E4%B8%8BMySQL%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5.html</guid>
        <pubDate>Fri, 12 Dec 2014 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;1. mysql安装后密码无法登陆问题&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;这时你需要进入/etc/mysql目录下，然后查看里面的用户名和密码，然后输入&lt;code&gt;sudo vim debian.cnf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用这个文件中的用户名和密码进入mysql,假如debian.cnf中的用户名为debian-sys-maint,则：&lt;code&gt;mysql -u debian-sys-maint -p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按回车，这时需要你输入密码，复制debian.cnf中的密码（不要手动输入，因为容易产生错误）。&lt;/li&gt;
&lt;li&gt;然后修改root用户的密码，如下操作&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;use mysql
show tables;//查看mysql数据库中的表，会看到一个user表。
select * from user;//查看一下这个表中是否有root用户，如果有：
update user set password=password(&amp;quot;root&amp;quot;) where user=&amp;quot;root&amp;quot;;//更改root用户进入mysql的密码。
flush privileges;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;quit退出mysql,然后用root登录 &lt;code&gt;mysql -u root -proot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;如果user表中没有root用户：用grant命令&lt;code&gt;grant all privileges on *.* to root@localhost identified by&amp;#39;123&amp;#39;&lt;/code&gt;
其中&lt;em&gt;.&lt;/em&gt;代表所有数据库中的所有表，即database name.your table&amp;#39;123&amp;#39;表示为root用户的密码。&lt;/p&gt;

&lt;p&gt;然后输入&lt;code&gt;flush privileges;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后输入&lt;code&gt;select * from user;&lt;/code&gt;查看一下user这个表中是否有root用户。如果有表示添加成功。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;2. 配置远程连接&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vim /etc/mysql/my.cnf&lt;/code&gt; 找到bind-address = 127.0.0.1&lt;/li&gt;
&lt;li&gt;注释掉这行，如：#bind-address = 127.0.0.1 或者改为： bind-address = 0.0.0.0，此表示允许任意IP访问；或者自己指定一个IP地址。&lt;/li&gt;
&lt;li&gt;重启 MySQL：&lt;code&gt;sudo /etc/init.d/mysql restart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;登录mysql授权用户能进行远程连接 

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grant all privileges on *.* to root@&amp;quot;%&amp;quot; identified by &amp;quot;password&amp;quot; with grant option;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flush privileges;&lt;/code&gt;
&amp;gt; 第一行命令解释如下，&lt;em&gt;.&lt;/em&gt;：第一个&lt;em&gt;代表数据库名；第二个&lt;/em&gt;代表表名。这里的意思是所有数据库里的所有表都授权给用户。root：授予root账号。“%”：表示授权的用户IP可以指定，这里代表任意的IP地址都能访问MySQL数据库。“password”：分配账号对应的密码，这里密码自己替换成你的mysql root帐号密码。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      </item>
    
      <item>
        <title>Java开发环境配置及常见问题</title>
        <link>/2014/02/11/Java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html</link>
        <guid isPermaLink="true">/2014/02/11/Java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html</guid>
        <pubDate>Tue, 11 Feb 2014 00:00:00 +0800</pubDate>
        <description>&lt;h3&gt;&lt;strong&gt;1. 下载和安装JDK&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;略&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;2. 配置环境变量&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;我的电脑-&amp;gt;属性-&amp;gt;高级系统设置-&amp;gt;环境变量&lt;/li&gt;
&lt;li&gt;在“系统变量”中，设置3项属性，JAVA_HOME,PATH,CLASSPATH(大小写无所谓),若已存在则点击“编辑”，不存在则点击“新建”；&lt;/li&gt;
&lt;li&gt;JAVA_HOME指明JDK安装路径，就是刚才安装时所选择的路径D:/java/jdk1.5.0_08，此路径下包括lib，bin，jre等文件夹（此变量最好设置，因为以后运行tomcat，eclipse等都需要依*此变量）

&lt;ul&gt;
&lt;li&gt;Path使得系统可以在任何路径下识别java命令，设为：%JAVA_HOME%/bin;%JAVA_HOME%/jre/bin&lt;/li&gt;
&lt;li&gt;CLASSPATH为java加载类(class or lib)路径，只有类在classpath中，java命令才能识别，设为：.;%JAVA_HOME%/lib/dt.jar;%JAVA_HOME%/lib/tools.jar (要加.表示当前路径)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;“开始”－&amp;gt;;“运行”，键入“cmd”；&lt;/li&gt;
&lt;li&gt;键入命令“java -version”，“java”，“javac”几个命令，出现画面，说明环境变量配置成功；&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;第三步中%JAVA_HOME%就是引用前面指定的JAVA_HOME；&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;strong&gt;3. Tomcat安装&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;略&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;strong&gt;4. Myeclipse或者eclipse安装&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;需要做的工作如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;配置Tomcat服务器：略&lt;/li&gt;
&lt;li&gt;配置Myeclipse快捷键提示：略&lt;/li&gt;
&lt;li&gt;配置Myeclipse编码：略&lt;/li&gt;
&lt;li&gt;设置myeclipse自动生成的author等注释 

&lt;ul&gt;
&lt;li&gt;window－&amp;gt;preference－&amp;gt;java－&amp;gt;code    styple－&amp;gt;code Template 当你选择到这部的时候就会看见右侧有一个框显示出code这个选项，你点开这个选项，点一下他下面的New Java  files 然后你点edit按钮，把他的内容换成你的就可以了，如
&lt;code&gt;
${filecomment}
${package_declaration}
/**
* @author Tree E-mail:Tree@163.com
* @version 创建时间：${date} ${time}
* 类说明
*/
${typecomment}
${type_declaration}
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;window－&amp;gt;preference－&amp;gt;java－&amp;gt;code    styple－&amp;gt;code Template -&amp;gt; Comments-&amp;gt;Types&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/**
* @author ${user}
* ${date} ${time}
* ${tags}
*/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改为&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/**
* @author Tree
* ${date} ${time}
* ${tags}
* /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;strong&gt;5. SVN插件安装&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;在eclipse的Help-&amp;gt;Eclipse Marketplace中，搜索框输入SVN,然后选择如下图所示的:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xiif2.com1.z0.glb.clouddn.com/2014-02-11-001.png&quot; alt=&quot;pic&quot;&gt;&lt;/p&gt;

&lt;p&gt;点击Install，然后全选安装即可。然后点击OK，自动重启即可使用。&lt;/p&gt;

&lt;p&gt;file-&amp;gt;import-&amp;gt;svn-&amp;gt;从SVN检出项目即可使用&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;6. maven插件安装&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;详见地址如下【亲测可行】：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dead-knight.iteye.com/blog/1841658&quot;&gt;http://dead-knight.iteye.com/blog/1841658&lt;/a&gt;
&lt;a href=&quot;http://blog.csdn.net/guanning0109/article/details/26069277&quot;&gt;http://blog.csdn.net/guanning0109/article/details/26069277&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;附:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://maven.apache.org/download.cgi&quot;&gt;Maven下载地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pan.baidu.com/s/1c06My4o&quot;&gt;Maven插件下载链接&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;常见问题汇总：&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;安装myeclipse出现failed to find a mian class in c:\windows\temp\的错误，然后中断安装&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;原因：win7的程序运行权限控制十分严格，运行myeclipse 10的安装程序时，首先是将安装包解压到c:\windows\temp的临时文件夹下，再执行该文件夹下的真正安装程序。由于权限不够，系统提示不能找到安装程序主类。&lt;/li&gt;
&lt;li&gt; 解决办法：右击myeclipse 10的安装程序myeclipse-10.0-offline-installer-windows.exe，在弹出窗口中选择“以管理员身份运行”即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;安装myeclipse 选择系统安装盘时无法选择next选项

&lt;ul&gt;
&lt;li&gt;原因：不详&lt;/li&gt;
&lt;li&gt;解决办法：更换安装目录即可&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[...未完待续，实时更新中...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
</description>
      </item>
    
  </channel>
</rss>